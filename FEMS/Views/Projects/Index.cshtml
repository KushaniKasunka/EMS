@model IEnumerable<FEMS.Database.project>

@using GridMvc.Html
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Projects</h2>

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<table>
    <tr>
        <td>@if (User.IsInRole("Client")) { @Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-success btn-primary btn-sm" }) }</ td >
        <td><span style="margin:5px"></span></td>
        <td>@if (User.IsInRole("Admin") || User.IsInRole("Manager")) { @Html.ActionLink("Pending Approvals", "PendingProjects", null, htmlAttributes: new { @class = "btn btn-success btn-primary btn-sm" })}</td>
    </tr>
</table>

<div class="code-cut">
    @Html.Grid(Model).Columns(Columns =>
{
    Columns.Add(p => p.project_name).Titled("Project Name").Filterable(true);
    Columns.Add(p => p.project_location).Titled("Location").Filterable(true);
    Columns.Add(p => p.project_assign_date).Titled("Assign Date").Filterable(true);
    Columns.Add(p => p.project_deadline).Titled("Deadline").Filterable(true);
    Columns.Add(p => p.project_budget).Titled("Budget").Filterable(true);

    if (Context.User.IsInRole("Admin"))
    {
        Columns.Add()
        .Titled("")
        .SetWidth(15)
        .Filterable(true)
        .Sanitized(false)
        .Encoded(false)
        .RenderValueAs(p => Html.ActionLink("Add", "AddTask", "Projects", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-success btn-primary btn-sm" })
        .ToHtmlString());

        Columns.Add()
    .Titled("")
    .SetWidth(15)
    .Filterable(true)
    .Sanitized(false)
    .Encoded(false)
    .RenderValueAs(p => Html.ActionLink("Tasks", "GetTaskForProject", "Tasks", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-success btn-primary btn-sm" })
    .ToHtmlString());

        Columns.Add()
       .Titled("")
       .SetWidth(15)
       .Filterable(true)
       .Sanitized(false)
       .Encoded(false)
       .RenderValueAs(p => Html.ActionLink("Edit", "Edit", "Projects", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-warning btn-primary btn-sm" })
       .ToHtmlString());

        Columns.Add()
            .Titled("")
            .SetWidth(15)
            .Filterable(true)
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(p => Html.ActionLink("Details", "Details", "Projects", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-info btn-primary btn-sm" })
            .ToHtmlString());

        Columns.Add()
            .Titled("")
            .SetWidth(15)
            .Filterable(true)
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(p => Html.ActionLink("Delete", "Delete", "Projects", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-danger btn-primary btn-sm" })
            .ToHtmlString());
    }

    if (Context.User.IsInRole("Manager"))
    {
        Columns.Add()
    .Titled("")
    .SetWidth(15)
    .Filterable(true)
    .Sanitized(false)
    .Encoded(false)
    .RenderValueAs(p => Html.ActionLink("Details", "Details", "Projects", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-info btn-primary btn-sm" })
    .ToHtmlString());
    }

    if (Context.User.IsInRole("Client"))
    {
        Columns.Add()
.Titled("")
.SetWidth(15)
.Filterable(true)
.Sanitized(false)
.Encoded(false)
.RenderValueAs(p => Html.ActionLink("Tasks", "GetTaskForProject", "Tasks", new { id = p.project_id }, htmlAttributes: new { @class = "btn btn-success btn-primary btn-sm" })
.ToHtmlString());
    }




}).WithPaging(10).Sortable().Filterable()
</div>

